# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

# Run across multiple platform and python version combinations
strategy:
  matrix:
    linux_python35:
      imageName: "ubuntu-16.04"
      python.version: "3.5"
    linux_python36:
      imageName: "ubuntu-16.04"
      python.version: "3.6"
    linux_python37:
      imageName: "ubuntu-16.04"
      python.version: "3.7"
    mac_python35:
      imageName: "macos-10.13"
      python.version: "3.5"
    mac_python36:
      imageName: "macos-10.13"
      python.version: "3.6"
    mac_python37:
      imageName: "macos-10.13"
      python.version: "3.7"
    windows_python35:
      imageName: "vs2017-win2016"
      python.version: "3.5"
    windows_python36:
      imageName: "vs2017-win2016"
      python.version: "3.6"
    windows_python37:
      imageName: "vs2017-win2016"
      python.version: "3.7"
  maxParallel: 3

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

# Install PIP and dependencies
- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

# Auto discover and run python unittests
- script: |
    python -m unittest discover ./WarrensTest
  displayName: 'unittest discovery and execution'
